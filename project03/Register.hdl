// This chip takes in one 16-bit input
// it "remembers" the inputs of each bit 
// and outputs them in the next time unit depending on the load instructions
// The essential function of this chip is:
// if load(t-1) then out(t)=in(t-1), else out(t)=out(t-1)

CHIP Register { // start of chip file
	
	// include header description
	IN in[16], load; // declare inputs
	OUT out[16]; // declare output
	// end of header description

	// include implementation description
	PARTS:
		Bit(in=in[0], load=load, out=out[0]); // use Bit register to store and write/read depending on load instruction
		Bit(in=in[1], load=load, out=out[1]);
		Bit(in=in[2], load=load, out=out[2]);
		Bit(in=in[3], load=load, out=out[3]);
		Bit(in=in[4], load=load, out=out[4]);
		Bit(in=in[5], load=load, out=out[5]);
		Bit(in=in[6], load=load, out=out[6]);
		Bit(in=in[7], load=load, out=out[7]);
		Bit(in=in[8], load=load, out=out[8]);
		Bit(in=in[9], load=load, out=out[9]);
		Bit(in=in[10], load=load, out=out[10]);
		Bit(in=in[11], load=load, out=out[11]);
		Bit(in=in[12], load=load, out=out[12]);
		Bit(in=in[13], load=load, out=out[13]);
		Bit(in=in[14], load=load, out=out[14]);
		Bit(in=in[15], load=load, out=out[15]);
	// end of implementation description

} // end of chip file